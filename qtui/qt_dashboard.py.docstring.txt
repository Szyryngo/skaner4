# Dokumentacja: qtui/qt_dashboard.py
# Wersja: 1.3.5 stable
# Data: 2025-08-17

## Kluczowe klasy i metody

### MainWindow(QMainWindow)
- Główne okno aplikacji, zawiera zakładki: Dashboard, Live Devices, Network Scanner, Configuration.
- Metoda `_set_initial_window_size`: ustawia rozmiar okna na podstawie config.yaml lub domyślnie na 1200x800.

### DashboardTab(QWidget)
- Panel główny do podglądu przechwyconych pakietów, szczegółów, HEX/ASCII, filtrów i sterowania sniffingiem.
- Dodano przycisk **Ustaw filtr**, który aktualizuje BPF-filter i restartuje przechwytywanie.
### Metody odpowiedzialne za filtrowanie:
- `add_packet(pkt_id, pkt_bytes, meta)`: dodaje pakiet do tabeli i bazy.
- `_on_set_filter()`: handler przycisku `Ustaw filtr` – czyści widok, zapisuje i stosuje nowy BPF-filter.
- `_set_bpf_filter(bpf)`: zapisuje filter do `config/config.yaml`, aktualizuje CaptureModule i restartuje sniffing.
- `_show_packet_details_inline(row, col)`: po kliknięciu pakietu wyświetla szczegóły, HEX i ASCII.
- `_format_hex(pkt_bytes)`, `_format_ascii(pkt_bytes)`: konwersja bajtów na widok HEX/ASCII.
- Obsługa infinite scroll, filtrów BPF, logowania statusu.
- `_on_start_clicked`: uruchamia lub wznawia przechwytywanie pakietów.
- `_on_pause_clicked`: wstrzymuje przechwytywanie pakietów (zatrzymuje sniffer).
- `_on_stop_clicked`: zatrzymuje sniffera i czyści bieżącą sesję.

### DevicesTab (Live Devices)
- Dynamiczne uruchamianie `DevicesSniffer` po wejściu na zakładkę i zatrzymywanie przy opuszczeniu.
- Tabela `devices`: kolumny IP, MAC, Ostatnio widziany, Pakiety, Status.
- Callback `on_device(event)`: dodaje nowy wiersz dla nowego IP lub aktualizuje timestamp i licznik pakietów dla istniejącego.
- Metoda `_cleanup_devices`: cyklicznie co 5 s. oznacza hosty nieaktywne (brak nowych eventów powyżej progu 300 s) jako `offline`.
3rd-party: wykorzystuje `ipaddress` do filtrowania tylko prywatnych adresów LAN.

### ScannerTab, ConfigTab
- Zakładki do podglądu urządzeń, skanowania sieci i konfiguracji.

## Ostatnie zmiany
- Wersja 1.3.5 stable (2025-08-17):
  - Zaimplementowano asynchroniczne skanowanie w ScannerTab (QThread + workers).
  - Dodano eksport raportów w ScannerTab (CSV) oraz w SOC (CSV/JSON) z domyślnymi nazwami zawierającymi timestamp i możliwością edycji.
  - DashboardTab: domyślnie podpowiadane nazwy plików dla eksportu CSV i PCAP z możliwością zmiany.
  - SOC: alerty w logu wstawiane od najnowszych; dodano kolumny src_mac/dst_mac w CaptureModule oraz logowanie MAC.
  - Poprawiono wcięcia w CaptureModule pkt_callback i usunięto lokalny import ThreadPoolExecutor.
  - Zaktualizowano numer wersji w GUI i dokumentacji do 1.3.5 stable.

## Użytkowanie
- Przejdź do zakładki Dashboard.
- Użyj pola kombinowanego filtra lub pola wejściowego, aby wybrać/wprowadzić wyrażenie BPF.
- Kliknij "Ustaw filtr", aby zastosować filtr i zaktualizować przechwytywanie.

## TODO / Kolejne kroki
- Zaimplementować brakujące metody w gui skanera (`_on_preview_ports`, `_on_save`, `_on_export`).
- Uzupełnić `handle_event()` w modułach: CaptureModule, DevicesSnifferModule, OptimizerModule.
- Dodać paginację lub lazy loading w tabeli pakietów.
- Rozbudować wizualizacje przepustowości i alertów AI na DashboardTab.
